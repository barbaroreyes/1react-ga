{"version":3,"sources":["component/trafficL.js","component/dataArray.js","App.js","reportWebVitals.js","index.js"],"names":["TrafficL","color","colorState","setColorState","button","className","style","backgroundColor","onClick","bulbData","id","App","useState","dataArray","map","item","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAqBeA,EAnBE,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,MAAMC,EAAqC,EAArCA,WAAWC,EAA0B,EAA1BA,cAAcC,EAAY,EAAZA,OAChD,OACE,qBACAC,UAAU,UACVC,MAAO,CAACC,gBACPN,IAASC,EACRD,EACD,SALD,SAQC,wBAAQO,QAAS,kBAChBL,EAAcF,IACdI,UAAU,MAFX,SAGED,OCVUK,EALA,CACb,CAACC,GAAI,OAAQT,MAAO,OACpB,CAACS,GAAI,OAAQT,MAAO,UACpB,CAACS,GAAI,KAAMT,MAAO,UC0BPU,EAvBH,WAEV,MAAoCC,mBAASC,EAAU,GAAGZ,OAA1D,mBAAOC,EAAP,KAAmBC,EAAnB,KAGA,OACE,qBAAKE,UAAU,MAAf,SACGQ,EAAUC,KAAI,SAACC,EAAKC,GACnB,OACA,cAAC,EAAD,CAEEf,MAAQc,EAAKd,MACbC,WAAYA,EACZC,cAAeA,EACfC,OAAQW,EAAKL,IAJRM,SCJAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f650b7b9.chunk.js","sourcesContent":["import React from 'react'\n\nconst TrafficL = ({color,colorState,setColorState,button}) => {\n  return (\n    <div \n    className='traffic' \n    style={{backgroundColor\n    :color=== colorState\n    ? color \n    :'black'}}\n    // \n    >\n     <button onClick={()=>\n      setColorState(color)} \n      className='btn'>\n      {button}\n      </button>\n    </div>\n  )\n}\n\nexport default TrafficL\n","const bulbData = [\n    {id: 'stop', color: 'red'},\n    {id: 'slow', color: 'yellow'},\n    {id: 'go', color: 'green'},\n  ];\n  export default bulbData;","import React ,{useState}from 'react'\nimport './App.css'\nimport TrafficL from './component/trafficL';\nimport dataArray from './component/dataArray'\n\n\nconst App = () => {\n  \n  const [colorState, setColorState] = useState(dataArray[0].color)\n\n\n  return (\n    <div className=\"App\">\n      {dataArray.map((item,i)=>{\n        return (\n        <TrafficL \n          key={i}\n          color ={item.color} \n          colorState={colorState}\n          setColorState={setColorState}\n          button={item.id}\n          />)\n          \n      })}\n      \n    </div>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}